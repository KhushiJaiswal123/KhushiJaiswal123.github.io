{"frames":[{"func":"train(price ~ total_floor_area + number_habitable_rooms + average_income + \n    london_zone + energy_consumption_current + co2_emissions_current, \n    data = training_data_scaled, method = \"knn\", tuneLength = 10)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"train.formula(price ~ total_floor_area + number_habitable_rooms + \n    average_income + london_zone + energy_consumption_current + \n    co2_emissions_current, data = training_data_scaled, method = \"knn\", \n    tuneLength = 10)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"train(x, y, weights = w, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"train.default(x, y, weights = w, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"nominalTrainWorkflow(x = x, y = y, wts = weights, info = trainInfo, \n    method = models, ppOpts = preProcess, ctrl = trControl, lev = classLevels, \n    ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"foreach(iter = seq(along = resampleIndex), .combine = \"c\", .verbose = FALSE, \n    .export = export, .packages = \"caret\") %:% foreach(parm = 1L:nrow(info$loop), \n    .combine = \"c\", .verbose = FALSE, .export = export, .packages = \"caret\") %op% \n    { ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"e$fun(obj, substitute(ex), parent.frame(), e$data)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch({\n    repeat {\n        args <- nextElem(it)\n        if (obj$verbose) { ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"doTryCatch(return(expr), name, parentenv, handler)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch(eval(xpr, envir = envir), error = function(e) e)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"doTryCatch(return(expr), name, parentenv, handler)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(xpr, envir = envir)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(xpr, envir = envir)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"data.frame(pred = predicted, obs = y[holdoutIndex], stringsAsFactors = FALSE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"StopIteration"}