"0","library(dplyr)"
"0",""
"0","outOfSampleData <- london_house_prices_2019_out_of_sample"
"0","predicted_values <- predict(stacked_model, newdata = outOfSampleData)"
"0",""
"0","# If predict() returns a list, convert it to a numeric vector"
"0","if (is.list(predicted_values)) {"
"0","  predicted_values <- unlist(predicted_values) # Flatten the list into a numeric vector"
"0","}"
"0",""
"0","# Add predicted_price column to the data frame"
"0","outOfSampleData <- outOfSampleData %>%"
"0","  mutate(predicted_price = as.numeric(predicted_values)) # Ensure predictions are numeric"
"0",""
"0","# Calculate investment potential and create the 'buy' column"
"0","outOfSampleData <- outOfSampleData %>%"
"0","  mutate(investment_potential = predicted_price - asking_price) %>% # Investment potential = predicted price - asking price"
"0","  arrange(desc(investment_potential)) %>% # Best investments on top"
"0","  mutate(buy = if_else(row_number() <= 200, 1, 0)) # Mark top 200 investments"
"0",""
"0","# Inspect the resulting data frame"
"0","head(outOfSampleData)"
