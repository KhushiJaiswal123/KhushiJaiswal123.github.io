{
  "hash": "b2d26b539c31ed70dbd106a286b31b57",
  "result": {
    "engine": "knitr",
    "markdown": "::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(lubridate)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'lubridate'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(janitor)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'janitor'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(viridis)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: viridisLite\n```\n\n\n:::\n\n```{.r .cell-code}\nStopAndSearchData <- read_csv(\"2022-09-metropolitan-stop-and-search.csv\") %>%\n  janitor::clean_names() #to remove spaces, upper case letters, etc. from variable names.\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 12447 Columns: 15\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (8): Type, Gender, Age range, Self-defined ethnicity, Officer-defined e...\ndbl  (2): Latitude, Longitude\nlgl  (4): Part of a policing operation, Policing operation, Outcome linked t...\ndttm (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\n# View(StopAndSearchData)\n\nupdatedData <- StopAndSearchData %>%\n            mutate(\n                  # just the date without hour info\n                  date_no_hour = as.Date(date), \n                  # get the year, month, etc\n                  # just the date without hour info\n                  date_no_hour = as.Date(date), \n                  # get the year, month, etc\n                  year_ = year(date),\n                  month_ = month(date),\n                  month_name = month(date, label = TRUE, abbr = FALSE),\n                  day_number = day(date),\n                  weekday = wday(date, label = TRUE, abbr = FALSE)\n                  )\n# View(updatedData)\n\n##################################################################################################\n\n##### BAR CHART OF SEARCHES BY AGE RANGE TO SHOW WHICH AGE GROUPS ARE MOST FREQUENCTLY STOPPED AND SEARCHED\n# separating into levels \nStopAndSearchData$age_range <- factor(StopAndSearchData$age_range, levels = c( \"under 10\", \"10-17\", \"18-24\", \"25-34\", \"over 34\" ))\n# Removing NA values\nStopAndSearchData <- StopAndSearchData %>% filter(!is.na(age_range))\n# Create the bar chart with counts on top\nggplot(data = StopAndSearchData, aes(x = age_range)) + \n  geom_bar(fill = \"steelblue\") +\n  geom_text(stat = 'count', aes(label = ..count..), vjust = -0.5) +  # Add text labels on top of the bars\n  labs(title = \"18-24 year olds Stopped and Searched the most\",\n       subtitle = \"Septemeber 2022\", \n       x = \"Age Ranges\",\n       y = \"Number of Searches\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 20, face = \"bold\", color = \"darkblue\", hjust = 0.5),  \n    plot.subtitle = element_text(size = 14, face = \"italic\", color = \"gray\", hjust = 0.5)  # Customizsing title and subtiltles\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: The dot-dot notation (`..count..`) was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(count)` instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](stopAndSearchPortfolio_files/figure-html/load_data-1.png){width=672}\n:::\n\n```{.r .cell-code}\n##################################################################################################\n\n###### STACKED BAR CHART BY OUTCOME & AGE RANGE \n# Removing NAs for age_range and outcome \nfilteredData <- StopAndSearchData %>%\n  filter(!is.na(age_range) & !is.na(outcome))\n\n# Creating the stacked bar chart\nggplot(data = filteredData, aes(x = age_range, fill = outcome)) +\n  geom_bar(position = \"stack\") +\n  labs(title = \"Usually no further action after Search across all ages (Sept 2022)\",\n       subtitle = \"Insight into age-based differneces in stop-and-search outcomes\",\n       x = \"Age Ranges\",\n       y = \"Count of Outcomes\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 17, face = \"bold\", color = \"darkblue\", hjust = 0.15),\n    plot.subtitle = element_text(size = 13, face = \"italic\", color = \"black\", hjust = 0),\n    legend.title = element_blank()  # Optionally remove legend title\n  )\n```\n\n::: {.cell-output-display}\n![](stopAndSearchPortfolio_files/figure-html/load_data-2.png){width=672}\n:::\n\n```{.r .cell-code}\n##################################################################################################\n\n############ Heatmap of Searches by Day of the Week and Hour.\n# Add an hour column to updatedData\nupdatedData <- updatedData %>%\n  mutate(hour = hour(date))  # Extracting hour from date\n\n# Summarising the data to count searches by day and hour\nheatmap_data <- updatedData %>%\n  group_by(weekday, hour) %>%\n  summarise(count = n(), .groups = 'drop')\n\n# creating the heatmap\nggplot(heatmap_data, aes(x = weekday, y = hour, fill = count)) +\n  geom_tile(color = \"white\") +  # Use geom_tile to create the heatmap\n  scale_fill_viridis_c(option = \"inferno\", # Fill with a continuous color scale\n                       name = \"Number of Searches\", \n                       direction = -1,) + # Reverse the color direction (darker color --> more births)\n  labs(\n    title = \"More searches during Late Evenings & End of the Work Week\",\n    subtitle = \"Frequency of searches based on the day of the week and hour of the day (Sept 2022)\",\n    x = \"Day of the Week\",\n    y = \"Hour of the Day\"\n  ) +\n  theme_minimal() + \n  theme(\n    plot.title = element_text(size = 15, face = \"bold\", hjust = 0.5),\n    plot.subtitle = element_text(size = 10, hjust = 0.5),\n    \n  )\n```\n\n::: {.cell-output-display}\n![](stopAndSearchPortfolio_files/figure-html/load_data-3.png){width=672}\n:::\n\n```{.r .cell-code}\n##################################################################################################\n\n##### LINE GRAPH TO SHOW THE COUNT OF STOP & SEARCHES PER DAY of the month  \n# Count stop-and-search activities by day\ndaily_searches <- updatedData %>%\n  group_by(date_no_hour) %>%\n  summarise(count = n())\n\n# Plot the line graph\nggplot(data = daily_searches, aes(x = date_no_hour, y = count)) +\n  geom_line(color = \"darkblue\") +\n  labs(\n    title = \"Pretty consistent number of Stop-and-Search Activities\",\n    subtitle = \"Trend of Stop-and-Search Activities (September 2022)\",\n    x = \"Date\",\n    y = \"Number of Searches\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 20, face = \"bold\", hjust = 0.5),\n    plot.subtitle = element_text(size = 14, face = \"italic\", hjust = 0.5),\n    axis.title.x = element_text(size = 12),\n    axis.title.y = element_text(size = 12)\n  ) + \n  geom_smooth()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](stopAndSearchPortfolio_files/figure-html/load_data-4.png){width=672}\n:::\n:::",
    "supporting": [
      "stopAndSearchPortfolio_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}